{"ast":null,"code":"import _slicedToArray from \"/Users/akilhyltonel/Desktop/test-ground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akilhyltonel/Desktop/test-ground/src/App.js\";\nimport './App.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport mainLogo from \"./icSpace.svg\";\nexport default function App() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TelemtryNavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TelemtryUi, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }));\n}\nfunction TelemtryNavBar() {\n  return /*#__PURE__*/React.createElement(Navbar, {\n    bg: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"icSpace Telemtry\")));\n}\nfunction TelemtryUi() {\n  var _useState = useState([0, 1, 0, 3, 5, 4, 1, 4, 5]),\n    _useState2 = _slicedToArray(_useState, 1),\n    mockData = _useState2[0];\n  var svgRef = useRef();\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var reference = useRef(0.0);\n\n  //var ws = useRef(null);\n\n  useEffect(function () {\n    var ws = new WebSocket(\"ws://127.0.0.1:8000/altitude\");\n    ws.onmessage = function (e) {\n      ws.send(\"Received\");\n      //console.log(e.data);\n      reference.current = JSON.parse(e.data).altitude;\n      console.log(reference.current);\n\n      //console.log(JSON.parse(e.data).altitude)\n    };\n    // setting up svg\n    var w = 500;\n    var h = 200;\n    var svg = d3.select(svgRef.current).attr('width', w).attr('height', h).style('background', '#d3d3d3').style('margin-top', '50');\n\n    // setting the scaling\n\n    // set the axes\n\n    // setting up the data for svg\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Telemtry-text-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Raw Telemtry\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Pitch: 0 \\xB0\\u2003 Yaw: 0 \\xB0\\u2003 Roll: 0 \\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Altitude: \", reference.current, \" m\")), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","Container","Navbar","App","TelemtryNavBar","TelemtryUi","mockData","svgRef","data","setData","reference","ws","WebSocket","onmessage","e","send","current","JSON","parse","altitude","console","log","w","h","svg","select","attr","style"],"sources":["/Users/akilhyltonel/Desktop/test-ground/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport mainLogo from'./icSpace.svg';\n\n\nexport default function App() {\n  return (\n\n    <>\n   <TelemtryNavBar/>\n\n    <TelemtryUi/>\n  </>\n )\n}\n\nfunction TelemtryNavBar() {\n  return (\n    <Navbar bg=\"light\">\n        <Container>\n          <Navbar.Brand href=\"#home\">icSpace Telemtry</Navbar.Brand>\n        </Container>\n      </Navbar>\n    )\n}\n\nfunction TelemtryUi() {\n  const [mockData] = useState([0,1,0,3,5,4,1,4,5]);\n  const svgRef = useRef();\n  const [data, setData] = useState([]);\n  const reference = useRef(0.0);\n\n  //var ws = useRef(null);\n\n  useEffect(() => {\n\n    var ws  = new WebSocket(\"ws://127.0.0.1:8000/altitude\");\n    ws.onmessage = (e) => { \n      ws.send(\"Received\")\n      //console.log(e.data);\n      reference.current = JSON.parse(e.data).altitude;\n      console.log(reference.current)\n\n  //console.log(JSON.parse(e.data).altitude)\n\n  \n  }\n      // setting up svg\n      const w = 500;\n      const h = 200;\n      const svg = d3.select(svgRef.current)\n      .attr('width', w)\n      .attr('height', h)\n      .style('background', '#d3d3d3')\n      .style('margin-top', '50')\n\n      // setting the scaling\n\n      // set the axes\n\n      // setting up the data for svg\n\n  }, [data])\n\n\n  return (\n    <div className=\"App\">\n    <div className=\"Telemtry-text-border\">\n      <h3>Raw Telemtry</h3>\n      <p>Pitch: 0 °&emsp; Yaw: 0 °&emsp; Roll: 0 °</p>\n      <p>Altitude: {reference.current} m</p>\n    </div>\n      <svg ref={svgRef}></svg> \n    </div>\n    \n  );\n}\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAAC;AAI5C,eAAe,SAASC,GAAG,GAAG;EAC5B,oBAEE,uDACD,oBAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAEhB,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CACZ;AAEL;AAEA,SAASC,cAAc,GAAG;EACxB,oBACE,oBAAC,MAAM;IAAC,EAAE,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACd,oBAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACR,oBAAC,MAAM,CAAC,KAAK;IAAC,IAAI,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAAgC,CAChD,CACL;AAEf;AAEA,SAASC,UAAU,GAAG;EAAA,gBACDR,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAAA;IAAzCS,QAAQ;EACf,IAAMC,MAAM,GAAGT,MAAM,EAAE;EAAC,iBACAD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BW,IAAI;IAAEC,OAAO;EACpB,IAAMC,SAAS,GAAGZ,MAAM,CAAC,GAAG,CAAC;;EAE7B;;EAEAC,SAAS,CAAC,YAAM;IAEd,IAAIY,EAAE,GAAI,IAAIC,SAAS,CAAC,8BAA8B,CAAC;IACvDD,EAAE,CAACE,SAAS,GAAG,UAACC,CAAC,EAAK;MACpBH,EAAE,CAACI,IAAI,CAAC,UAAU,CAAC;MACnB;MACAL,SAAS,CAACM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,CAAC,CAACN,IAAI,CAAC,CAACW,QAAQ;MAC/CC,OAAO,CAACC,GAAG,CAACX,SAAS,CAACM,OAAO,CAAC;;MAElC;IAGA,CAAC;IACG;IACA,IAAMM,CAAC,GAAG,GAAG;IACb,IAAMC,CAAC,GAAG,GAAG;IACb,IAAMC,GAAG,GAAGxB,EAAE,CAACyB,MAAM,CAAClB,MAAM,CAACS,OAAO,CAAC,CACpCU,IAAI,CAAC,OAAO,EAAEJ,CAAC,CAAC,CAChBI,IAAI,CAAC,QAAQ,EAAEH,CAAC,CAAC,CACjBI,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,CAC9BA,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC;;IAE1B;;IAEA;;IAEA;EAEJ,CAAC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAGV,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpB;IAAK,SAAS,EAAC,sBAAsB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAqB,eACrB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wDAAgD,eAChD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAAcE,SAAS,CAACM,OAAO,OAAO,CAClC,eACJ;IAAK,GAAG,EAAET,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAO,CACpB;AAGV"},"metadata":{},"sourceType":"module"}