{"ast":null,"code":"import _slicedToArray from \"/Users/mitch/Dev/kea-telemetry/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mitch/Dev/kea-telemetry/src/TelemetryUi.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport 'd3-attrs';\nexport default function TelemetryUi() {\n  var svgRef = useRef();\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    var ws = new WebSocket(\"ws://10.0.0.132:80/ws\");\n    ws.onmessage = function (e) {\n      setData(JSON.parse(e.data));\n    };\n    // setting up svg\n    var attributes = {\n      width: 500,\n      height: 200\n    };\n    var style = {\n      background: '#d3d3d3',\n      marginTop: 50\n    };\n    var svg = d3.select(svgRef.current).attrs(attributes).styles(style);\n\n    // setting the scaling\n\n    // set the axes\n\n    // setting up the data for svg\n  }, [data]);\n  var pitch = data.pitch,\n    yaw = data.yaw,\n    roll = data.roll,\n    altitude = data.altitude;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Telemetry-text-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Raw Telemetry\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Pitch: \", pitch, \" \\xB0\\u2003 Yaw: \", yaw, \" \\xB0\\u2003 Roll: \", roll, \" \\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Altitude: \", altitude, \" \")), /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","TelemetryUi","svgRef","data","setData","ws","WebSocket","onmessage","e","JSON","parse","attributes","width","height","style","background","marginTop","svg","select","current","attrs","styles","pitch","yaw","roll","altitude"],"sources":["/Users/mitch/Dev/kea-telemetry/src/TelemetryUi.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport 'd3-attrs';\n\nexport default function TelemetryUi() {\n  const svgRef = useRef();\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    let ws = new WebSocket(\"ws://10.0.0.132:80/ws\");\n    ws.onmessage = (e) => {\n      setData(JSON.parse(e.data));\n    };\n    // setting up svg\n    const attributes = {width:500, height: 200}\n    const style = {background: '#d3d3d3', marginTop: 50}\n    const svg = d3.select(svgRef.current).attrs(attributes).styles(style)\n\n    // setting the scaling\n\n    // set the axes\n\n    // setting up the data for svg\n  }, [data]);\n\n  let { pitch, yaw, roll, altitude } = data;\n\n  return (\n    <div className=\"App\">\n      <div className=\"Telemetry-text-border\">\n        <h3>Raw Telemetry</h3>\n        <p>\n          Pitch: {pitch} °&emsp; Yaw: {yaw} °&emsp; Roll: {roll} °\n        </p>\n        <p>Altitude: {altitude} </p>\n      </div>\n      <svg ref={svgRef}></svg>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAO,UAAU;AAEjB,eAAe,SAASC,WAAW,GAAG;EACpC,IAAMC,MAAM,GAAGJ,MAAM,EAAE;EAAC,gBACAD,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAA7BM,IAAI;IAAEC,OAAO;EAEpBL,SAAS,CAAC,YAAM;IACd,IAAIM,EAAE,GAAG,IAAIC,SAAS,CAAC,uBAAuB,CAAC;IAC/CD,EAAE,CAACE,SAAS,GAAG,UAACC,CAAC,EAAK;MACpBJ,OAAO,CAACK,IAAI,CAACC,KAAK,CAACF,CAAC,CAACL,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD;IACA,IAAMQ,UAAU,GAAG;MAACC,KAAK,EAAC,GAAG;MAAEC,MAAM,EAAE;IAAG,CAAC;IAC3C,IAAMC,KAAK,GAAG;MAACC,UAAU,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAE,CAAC;IACpD,IAAMC,GAAG,GAAGjB,EAAE,CAACkB,MAAM,CAAChB,MAAM,CAACiB,OAAO,CAAC,CAACC,KAAK,CAACT,UAAU,CAAC,CAACU,MAAM,CAACP,KAAK,CAAC;;IAErE;;IAEA;;IAEA;EACF,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAAC,IAELmB,KAAK,GAA0BnB,IAAI,CAAnCmB,KAAK;IAAEC,GAAG,GAAqBpB,IAAI,CAA5BoB,GAAG;IAAEC,IAAI,GAAerB,IAAI,CAAvBqB,IAAI;IAAEC,QAAQ,GAAKtB,IAAI,CAAjBsB,QAAQ;EAEhC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAK,SAAS,EAAC,uBAAuB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAAsB,eACtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cACUH,KAAK,uBAAgBC,GAAG,wBAAiBC,IAAI,UACnD,eACJ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAAcC,QAAQ,MAAM,CACxB,eACN;IAAK,GAAG,EAAEvB,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAO,CACpB;AAEV"},"metadata":{},"sourceType":"module"}