{"ast":null,"code":"import _slicedToArray from \"/Users/akilhyltonel/Desktop/test-ground/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akilhyltonel/Desktop/test-ground/src/App.js\";\nimport './App.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query';\nvar queryClient = new QueryClient();\nexport default function App() {\n  return /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: queryClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(TelemtryUi, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }));\n}\nfunction TelemtryUi() {\n  var _useState = useState([0, 1, 0, 3, 5, 4, 1, 4, 5]),\n    _useState2 = _slicedToArray(_useState, 1),\n    mockData = _useState2[0];\n  var svgRef = useRef();\n  useEffect(function () {\n    // setting up svg\n    var w = 500;\n    var h = 200;\n    var svg = d3.select(svgRef.current).attr('width', w).attr('height', h).style('background', '#d3d3d3').style('margin-top', '50');\n\n    // setting the scaling\n\n    // set the axes\n\n    // setting up the data for svg\n  }, [mockData]);\n  var _useQuery = useQuery('repoData', function () {\n      return fetch('ws://127.0.0.1:8000/altitude').then(function (res) {\n        return res.json();\n      });\n    }),\n    isLoading = _useQuery.isLoading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  console.log(data);\n  if (isLoading) return 'Loading...';\n  if (error) return 'An error has occurred: ' + error.message;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","QueryClient","QueryClientProvider","useQuery","queryClient","App","TelemtryUi","mockData","svgRef","w","h","svg","select","current","attr","style","fetch","then","res","json","isLoading","error","data","console","log","message"],"sources":["/Users/akilhyltonel/Desktop/test-ground/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useRef, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query';\n\n\n const queryClient = new QueryClient()\n\n\n\n\n\nexport default function App() {\n  return (\n<QueryClientProvider client={queryClient}>\n    <TelemtryUi/>\n  </QueryClientProvider>\n )\n}\n\nfunction TelemtryUi() {\n  const [mockData] = useState([0,1,0,3,5,4,1,4,5]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n      // setting up svg\n      const w = 500;\n      const h = 200;\n      const svg = d3.select(svgRef.current)\n      .attr('width', w)\n      .attr('height', h)\n      .style('background', '#d3d3d3')\n      .style('margin-top', '50')\n\n      // setting the scaling\n\n      // set the axes\n\n      // setting up the data for svg\n\n  }, [mockData])\n\n   const { isLoading, error, data } = useQuery('repoData', () =>\n     fetch('ws://127.0.0.1:8000/altitude').then(res =>\n       res.json()\n     )\n   )\n   console.log(data);\n\n     if (isLoading) return 'Loading...'\n \n   if (error) return 'An error has occurred: ' + error.message\n\n\n  return (\n    <div className=\"App\">\n      <svg ref={svgRef}></svg> \n\n    \n\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,QAAQ,QAAQ,aAAa;AAGvE,IAAMC,WAAW,GAAG,IAAIH,WAAW,EAAE;AAMtC,eAAe,SAASI,GAAG,GAAG;EAC5B,oBACF,oBAAC,mBAAmB;IAAC,MAAM,EAAED,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACrC,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CACO;AAExB;AAEA,SAASE,UAAU,GAAG;EAAA,gBACDT,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAAA;IAAzCU,QAAQ;EACf,IAAMC,MAAM,GAAGV,MAAM,EAAE;EAEvBC,SAAS,CAAC,YAAM;IACZ;IACA,IAAMU,CAAC,GAAG,GAAG;IACb,IAAMC,CAAC,GAAG,GAAG;IACb,IAAMC,GAAG,GAAGX,EAAE,CAACY,MAAM,CAACJ,MAAM,CAACK,OAAO,CAAC,CACpCC,IAAI,CAAC,OAAO,EAAEL,CAAC,CAAC,CAChBK,IAAI,CAAC,QAAQ,EAAEJ,CAAC,CAAC,CACjBK,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,CAC9BA,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC;;IAE1B;;IAEA;;IAEA;EAEJ,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAAA,gBAEsBJ,QAAQ,CAAC,UAAU,EAAE;MAAA,OACtDa,KAAK,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAAC,UAAAC,GAAG;QAAA,OAC5CA,GAAG,CAACC,IAAI,EAAE;MAAA,EACX;IAAA,EACF;IAJOC,SAAS,aAATA,SAAS;IAAEC,KAAK,aAALA,KAAK;IAAEC,IAAI,aAAJA,IAAI;EAK9BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEf,IAAIF,SAAS,EAAE,OAAO,YAAY;EAEpC,IAAIC,KAAK,EAAE,OAAO,yBAAyB,GAAGA,KAAK,CAACI,OAAO;EAG5D,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClB;IAAK,GAAG,EAAEjB,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAO,CAIpB;AAEV"},"metadata":{},"sourceType":"module"}